floor(m/3 + 0.1)
floor(m/3 + 0.1) * 3
dates = as.POSIXlt(corpus$dates)
dates$mday = rep(1, length(dates))
dates$mon = unlist(lapply(dates$mon, function(m) floor(m/3 + 0.1) * 3))
cbind(corpus$dates[s], unlist(lapply(dates[s], as.String)))
s = sample(1:1000, 10)
cbind(corpus$dates[s], unlist(lapply(dates[s], as.String)))
topics_d = topics
topics = read.csv("./data/topics_probabilities.csv")
corpus = read.csv("./data/nyt.csv", sep="\t", stringsAsFactors=F)
corpus = read.csv("./data/nyt.csv", sep="\t", stringsAsFactors=F)
dates = as.POSIXlt(corpus$dates)
corpus = read.csv("./data/nyt.csv", sep="\t", stringsAsFactors=F)
dates = as.POSIXlt(corpus$dates)
# Setting all days to 1
dates$mday = rep(1, length(dates))
dates = as.POSIXlt(corpus$dates)
# Setting all days to 1
dates$mday = rep(1, length(dates))
# Months are stored as a value between 0 and 11
# We bring them back to a trimestrial value :
# [0,1,2,3,4,5,6,7,8,9,10,11] ==> [0,0,0,3,3,3,6,6,6,9,9,9]
dates$mon = unlist(lapply(dates$mon, function(m) floor(m/3 + 0.1) * 3))
topics_d = topics
topics_d$dates = unlist(lapply(dates, as.String))
library(dplyr)
amounts = topics_d %>%
group_by(dates) %>%
summarise(t1 = mean(V1),
t2 = mean(V2),
t3 = mean(V3),
t4 = mean(V4))
amounts$num_dates = as.POSIXlt(amounts$dates)
plot(amounts$num_dates, amounts$t1, type="l", col="red", ylim=c(0,1))
lines(amounts$num_dates, amounts$t2, col="green", ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col="blue", ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, ylim=c(0,1))
doc_topic_distr = read.csv("./data/topic_probabilities.csv")
doc_topic_distr = read.csv("./data/topics_probabilities.csv")
ordered_articles = apply(doc_topic_distr, 2, function(t) order(t, decreasing = T))
titles = apply(ordered_articles[1:10,], 2, function(a) corpus[a,]$titles)
titles
corpus = read.csv("./data/nyt.csv", sep="\t", stringsAsFactors=F)
library(text2vec)
#library(stopwords)
library(tm)
library(dplyr)
iterator <- itoken(corpus$texts,
preprocessor=tolower, # replace capital letters
tokenizer=word_tokenizer, # split the text into unigrams
progressbar=F)
stop <- stopwords("english")
vocabulary <- create_vocabulary(iterator, stopwords = stop)
vocabulary <- create_vocabulary(iterator, stopwords = stop)
vocabulary = vocabulary %>% prune_vocabulary(term_count_min = 10)
vectorizer <- vocab_vectorizer(vocabulary)
dtm = create_dtm(iterator, vectorizer)
lda_model = LDA$new(n_topics = 4,
doc_topic_prior = 0.1,
topic_word_prior = 0.01)
doc_topic_distr = lda_model$fit_transform(x = dtm,
n_iter = 1000,
convergence_tol = 0.001,
n_check_convergence = 20,
progressbar = F)
ordered_articles = apply(doc_topic_distr, 2, function(t) order(t, decreasing = T))
titles = apply(ordered_articles[1:10,], 2, function(a) corpus[a,]$titles)
titles
lda_model = LDA$new(n_topics = 4,
doc_topic_prior = 0.1,
topic_word_prior = 0.01)
doc_topic_distr = lda_model$fit_transform(x = dtm,
n_iter = 10000,
convergence_tol = 0.0001,
n_check_convergence = 20,
progressbar = F)
ordered_articles = apply(doc_topic_distr, 2, function(t) order(t, decreasing = T))
titles = apply(ordered_articles[1:10,], 2, function(a) corpus[a,]$titles)
titles
doc_topic_distr = read.csv("./data/topics_probabilities.csv")
ordered_articles = apply(doc_topic_distr, 2, function(t) order(t, decreasing = T))
titles = apply(ordered_articles[1:10,], 2, function(a) corpus[a,]$titles)
titles
tfidf <- TfIdf$new(smooth_idf = TRUE, sublinear_tf = TRUE)
dtm <- tfidf$fit_transform(dtm)
lda_model = LDA$new(n_topics = 4,
doc_topic_prior = 0.1,
topic_word_prior = 0.01)
doc_topic_distr = lda_model$fit_transform(x = dtm,
n_iter = 1000,
convergence_tol = 0.001,
n_check_convergence = 20,
progressbar = F)
# Most relevant words for each topic
lda_model$get_top_words(n = 15, lambda = 0.4)
ordered_articles = apply(doc_topic_distr, 2, function(t) order(t, decreasing = T))
titles = apply(ordered_articles[1:10,], 2, function(a) corpus[a,]$titles)
titles
dtm = create_dtm(iterator, vectorizer)
lda_model = LDA$new(n_topics = 4,
doc_topic_prior = 0.1,
topic_word_prior = 0.01)
doc_topic_distr = lda_model$fit_transform(x = dtm,
n_iter = 1000,
convergence_tol = 0.001,
n_check_convergence = 20,
progressbar = F)
# Most relevant words for each topic
lda_model$get_top_words(n = 15, lambda = 0.4)
ordered_articles = apply(doc_topic_distr, 2, function(t) order(t, decreasing = T))
titles = apply(ordered_articles[1:10,], 2, function(a) corpus[a,]$titles)
titles
titles = apply(ordered_articles[1:20,], 2, function(a) corpus[a,]$titles)
titles
lda_model = LDA$new(n_topics = 4,
doc_topic_prior = 0.1,
topic_word_prior = 0.01)
doc_topic_distr = lda_model$fit_transform(x = dtm,
n_iter = 1000,
convergence_tol = 0.001,
n_check_convergence = 20,
progressbar = F)
# Most relevant words for each topic
lda_model$get_top_words(n = 15, lambda = 0.4)
ordered_articles = apply(doc_topic_distr, 2, function(t) order(t, decreasing = T))
titles = apply(ordered_articles[1:20,], 2, function(a) corpus[a,]$titles)
titles
plot(amounts$num_dates, amounts$t1, type="l", col="red", ylim=c(0,1), legend="test")
plot(amounts$num_dates, amounts$t1, type="l", col="red", ylim=c(0,1), ylab="test")
plot(amounts$num_dates, amounts$t1, type="l", col="red", ylim=c(0,1), ylab="test")
lines(amounts$num_dates, amounts$t2, col="green", ylim=c(0,1), ylab="ok")
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend(1, 95, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"),
col=(1:4), lty=1:2, cex=0.8)
legend(1, 1, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"),
col=(1:4), lty=1:2, cex=0.8)
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend(1, 1, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"), col=(1:4), lty=1:2, cex=0.8)
legend(1, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"), col=(1:4), lty=1:2, cex=0.8)
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend(1, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"), col=(1:4), lty=1:2, cex=0.8)
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend(10, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"), col=(1:4), lty=1:2, cex=0.8)
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend(10, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"), col=(1:4), lty=1, cex=0.8)
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend(10, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"), col=(1:4), lty=c(1,1,1,1), cex=0.8)
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend(1, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"), col=(1:4), lty=c(1,1,1,1), cex=0.8)
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend(1988, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"), col=(1:4), lty=c(1,1,1,1), cex=0.8)
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend(1, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"))
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
legend(1, legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"))
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
legend("bottomleft", legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"))
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend("topright", legend=c("Topic 1", "Topic 2", "Topic 3", "Topic 4"), col=(1:4), lty=1, cex=0.8)
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend("topright",
col=(1:4),
lty=1,
cex=0.8,
legend=c("Topic 1",
"Topic 2",
"Topic 3",
"Topic 4"))
relevant_topic_documents(topics, corpus$titles)
# Finding most relevant articles for each topic
relevant_topic_documents <- function(topics, documents, n=10) {
ordered_articles = apply(topics, 2, function(t) order(t, decreasing = T))
titles = apply(ordered_articles[1:n,], 2, function(a) documents[a])
titles
}
relevant_topic_documents(topics, corpus$titles)
dates = as.POSIXlt(corpus$dates)
# Setting all days to 1
dates$mday = rep(1, length(dates))
# Months are stored as a value between 0 and 11
# We bring them back to a trimestrial value :
# [0,1,2,3,4,5,6,7,8,9,10,11] ==> [0,0,0,3,3,3,6,6,6,9,9,9]
dates$mon = unlist(lapply(dates$mon, function(m) floor(m/3 + 0.1) * 3))
topics_d = topics
topics_d$dates = unlist(lapply(dates, as.String))
topics_d$dates = unlist(lapply(dates, as.String))
library(dplyr)
amounts = topics_d %>%
group_by(dates) %>%
summarise(t1 = mean(V1),
t2 = mean(V2),
t3 = mean(V3),
t4 = mean(V4))
amounts$num_dates = as.POSIXlt(amounts$dates)
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend("topright",
col=(1:4),
lty=1,
cex=0.8,
legend=c("Topic 1",
"Topic 2",
"Topic 3",
"Topic 4"))
relevant_topic_documents(topics, corpus$titles, 30)
amounts = topics_d %>%
group_by(dates) %>%
summarise(t1 = sum(V1),
t2 = sum(V2),
t3 = sum(V3),
t4 = sum(V4))
amounts$num_dates = as.POSIXlt(amounts$dates)
plot(amounts$num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(amounts$num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(amounts$num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(amounts$num_dates, amounts$t4, col=4, ylim=c(0,1))
legend("topright",
col=(1:4),
lty=1,
cex=0.8,
legend=c("Topic 1",
"Topic 2",
"Topic 3",
"Topic 4"))
plot(amounts$num_dates, amounts$t1, col=1, type="l")
lines(amounts$num_dates, amounts$t2, col=2)
lines(amounts$num_dates, amounts$t3, col=3)
lines(amounts$num_dates, amounts$t4, col=4)
legend("topright",
col=(1:4),
lty=1,
cex=0.8,
legend=c("Topic 1",
"Topic 2",
"Topic 3",
"Topic 4"))
amounts = topics_d %>%
group_by(dates) %>%
summarise(t1 = mean(V1),
t2 = mean(V2),
t3 = mean(V3),
t4 = mean(V4))
amounts$num_dates = as.POSIXlt(amounts$dates)
plot(amounts$num_dates, amounts$t1, col=1, type="l")
lines(amounts$num_dates, amounts$t2, col=2)
lines(amounts$num_dates, amounts$t3, col=3)
lines(amounts$num_dates, amounts$t4, col=4)
legend("topright",
col=(1:4),
lty=1,
cex=0.8,
legend=c("Topic 1",
"Topic 2",
"Topic 3",
"Topic 4"))
amounts = topics_d %>%
group_by(dates) %>%
summarise(t1 = mean(V1),
t2 = mean(V2),
t3 = mean(V3),
t4 = mean(V4))
amounts = apply(amounts, 1, function(x) x/sum(x))
View(amounts)
amounts = topics_d %>%
group_by(dates) %>%
summarise(t1 = mean(V1),
t2 = mean(V2),
t3 = mean(V3),
t4 = mean(V4))
amounts[2:6] = apply(amounts[2:6], 1, function(x) x/sum(x))
amounts[,2:6] = apply(amounts[,2:6], 1, function(x) x/sum(x))
amounts[,2]
View(amounts)
amounts = topics_d %>%
group_by(dates) %>%
summarise(t1 = mean(V1),
t2 = mean(V2),
t3 = mean(V3),
t4 = mean(V4))
num_dates = as.POSIXlt(amounts$dates)
plot(num_dates, amounts$t1, col=1, type="l")
lines(num_dates, amounts$t2, col=2)
lines(num_dates, amounts$t3, col=3)
lines(num_dates, amounts$t4, col=4)
legend("topright",
col=(1:4),
lty=1,
cex=0.8,
legend=c("Topic 1",
"Topic 2",
"Topic 3",
"Topic 4"))
plot(num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(num_dates, amounts$t4, col=4, ylim=c(0,1))
legend("topright",
col=(1:4),
lty=1,
cex=0.8,
legend=c("Topic 1",
"Topic 2",
"Topic 3",
"Topic 4"))
topics = read.csv("./data/topics_probabilities.csv")
corpus = read.csv("./data/nyt.csv", sep="\t", stringsAsFactors=F)
# Finding most relevant articles for each topic
relevant_topic_documents <- function(topics, documents, n=10) {
ordered_articles = apply(topics, 2, function(t) order(t, decreasing = T))
titles = apply(ordered_articles[1:n,], 2, function(a) documents[a])
titles
}
relevant_topic_documents(topics, corpus$titles, 30)
dates = as.POSIXlt(corpus$dates)
# Setting all days to 1
dates$mday = rep(1, length(dates))
# Months are stored as a value between 0 and 11
# We bring them back to a trimestrial value :
# [0,1,2,3,4,5,6,7,8,9,10,11] ==> [0,0,0,3,3,3,6,6,6,9,9,9]
dates$mon = unlist(lapply(dates$mon, function(m) floor(m/3 + 0.1) * 3))
topics_d = topics
topics_d$dates = unlist(lapply(dates, as.String))
library(dplyr)
amounts = topics_d %>%
group_by(dates) %>%
summarise(t1 = mean(V1),
t2 = mean(V2),
t3 = mean(V3),
t4 = mean(V4))
num_dates = as.POSIXlt(amounts$dates)
plot(num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(num_dates, amounts$t4, col=4, ylim=c(0,1))
legend("topright",
col=(1:4),
lty=1,
cex=0.8,
legend=c("Topic 1",
"Topic 2",
"Topic 3",
"Topic 4"))
entities = read.csv("./data/full_entities.csv")
source("notebook.Rmd")
setwd("D:/Data Perso/Google Drive/Mon M2/Text Mining/projet/Documents-Corpus-Summarizing/src")
source("functions.r")
iterator = get_iterator(corpus$textx)
iterator = get_iterator(corpus$texts)
vocabulary = get_vocabulary(iterator)
dtm = get_dtm(vocabulary)
dtm.idf = get_dtm_tfidf(dtm)
search(
"soviet gorbatchev russia ussr",
corpus$texts,
vocab,
dtm.tfidf
)
make.request <- function(phrase) {
unlist(strsplit(tolower(phrase), " "))
}
vectorize <- function(words, vocab) {
v <- rep(0, nrow(vocab))
for (w in words) {
idx = which(vocab$term == w)
v[idx] = v[idx] + 1
}
v
}
cosinus <- function(u, v) {
if (all(u == 0) || all(v == 0)) return(0)
u <- u / sqrt(sum(u ^ 2))
v <- v / sqrt(sum(v ^ 2))
c(u %*% v)
}
closest <- function(doc, dtm, k) {
distance = apply(dtm, 1, function(x) cosinus(x, doc))
if (k == 0) k <- length(distance)
ord = order(distance, decreasing = T)
ord[1:k]
}
search <- function(phrase, corpus, vocab, dtm, k=10) {
r = vectorize(make.request(phrase), vocab)
ord <- closest(r, dtm, k)
corpus[ord]
}
search(
"soviet gorbatchev russia ussr",
corpus$texts,
vocab,
dtm.tfidf
)
search(
"soviet gorbatchev russia ussr",
corpus$texts,
vocabulary,
dtm.tfidf
)
dtm.tfidf = get_dtm_tfidf(dtm)
search(
"soviet gorbatchev russia ussr",
corpus$texts,
vocabulary,
dtm.tfidf
)
result = search(
"soviet gorbatchev russia ussr",
corpus$texts,
vocabulary,
dtm.tfidf,
k=20
)
corpus$titles[result,]
result
search <- function(phrase, corpus, vocab, dtm, k=10) {
r = vectorize(make.request(phrase), vocab)
ord <- closest(r, dtm, k)
ord
}
result = search(
"soviet gorbatchev russia ussr",
corpus$texts,
vocabulary,
dtm.tfidf,
k=20
)
result
corpus$titles[result,]
corpus$titles[result]
to_trimestrial_dates <- function(dates) {
# Setting all days to 1
dates$mday = rep(1, length(dates))
# Months are stored as a value between 0 and 11
# We bring them back to a trimestrial value :
# [0,1,2,3,4,5,6,7,8,9,10,11] ==> [0,0,0,3,3,3,6,6,6,9,9,9]
dates$mon = unlist(lapply(dates$mon, function(m) floor(m/3 + 0.1) * 3))
dates
}
group_by_dates <- function(dataframe, ...) {
amounts = dataframe %>%
group_by(dates) %>%
summarise(...)
amounts
}
group_by_dates(topics_d, t1 = mean(V1),
t2 = mean(V2),
t3 = mean(V3),
t4 = mean(V4))
group_by_dates(topics_d, t1 = mean(V1),
t2 = mean(V2),
t3 = mean(V3))
amounts = group_by_dates(topics_d,
t1 = mean(V1),
t2 = mean(V2),
t3 = mean(V3),
t4 = mean(V4))
num_dates = as.POSIXlt(amounts$dates)
plot(num_dates, amounts$t1, col=1, ylim=c(0,1), type="l")
lines(num_dates, amounts$t2, col=2, ylim=c(0,1))
lines(num_dates, amounts$t3, col=3, ylim=c(0,1))
lines(num_dates, amounts$t4, col=4, ylim=c(0,1))
legend("topright",
col=(1:4),
lty=1,
cex=0.8,
legend=c("Topic 1",
"Topic 2",
"Topic 3",
"Topic 4"))
